name: Tauri Release

on:
  # 打 tag 自动出包（推荐）
  push:
    tags:
      - "v*.*.*"
  # 也支持手动触发
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install JS deps
        run: npm ci

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: swatinem/rust-cache@v2

      # 如果前端在子目录或需要额外安装命令，这里加（示例：pnpm、yarn）
      # - run: corepack enable && pnpm i --frozen-lockfile

      - name: Build & Release with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # —— 可选：代码签名/公证（按需配置 secrets，见下文）——
          # macOS 代码签名/公证（可选）
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}  # App-specific password
          # APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          # WINDOWS 代码签名（可选）
          # WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}          # base64 of .pfx
          # WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
          # Tauri 更新签名（可选）
          # TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          # TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          # 如果你的前端、tauri 在仓库根目录，下面两项都不用写
          # projectPath: .
          # tauriScript: npm run tauri
          tagName: v__VERSION__             # 从 package/tauri 配置里取版本并创建 tag（如已存在则使用）
          releaseName: "LucidStack v__VERSION__"
          releaseBody: "Auto-generated by GitHub Actions."
          releaseDraft: true                 # 先生成草稿，确认后再发布
          prerelease: false
